// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// DevicesColumns holds the columns for the "devices" table.
	DevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "manufacturer", Type: field.TypeString},
		{Name: "model", Type: field.TypeString},
		{Name: "build_number", Type: field.TypeString},
		{Name: "os", Type: field.TypeString},
		{Name: "screen_width", Type: field.TypeUint32},
		{Name: "screen_height", Type: field.TypeUint32},
	}
	// DevicesTable holds the schema information for the "devices" table.
	DevicesTable = &schema.Table{
		Name:       "devices",
		Columns:    DevicesColumns,
		PrimaryKey: []*schema.Column{DevicesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "device_manufacturer_model_build_number",
				Unique:  true,
				Columns: []*schema.Column{DevicesColumns[1], DevicesColumns[2], DevicesColumns[3]},
			},
		},
	}
	// TelemetriesColumns holds the columns for the "telemetries" table.
	TelemetriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "app_version", Type: field.TypeString},
		{Name: "os_version", Type: field.TypeString},
		{Name: "action_type", Type: field.TypeString},
		{Name: "action_data", Type: field.TypeJSON},
		{Name: "action_at", Type: field.TypeTime},
		{Name: "device_telemetries", Type: field.TypeInt},
		{Name: "user_telemetries", Type: field.TypeUUID},
	}
	// TelemetriesTable holds the schema information for the "telemetries" table.
	TelemetriesTable = &schema.Table{
		Name:       "telemetries",
		Columns:    TelemetriesColumns,
		PrimaryKey: []*schema.Column{TelemetriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "telemetries_devices_telemetries",
				Columns:    []*schema.Column{TelemetriesColumns[6]},
				RefColumns: []*schema.Column{DevicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "telemetries_users_telemetries",
				Columns:    []*schema.Column{TelemetriesColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "telemetry_user_telemetries_device_telemetries",
				Unique:  false,
				Columns: []*schema.Column{TelemetriesColumns[7], TelemetriesColumns[6]},
			},
			{
				Name:    "telemetry_app_version_user_telemetries_device_telemetries",
				Unique:  false,
				Columns: []*schema.Column{TelemetriesColumns[1], TelemetriesColumns[7], TelemetriesColumns[6]},
			},
			{
				Name:    "telemetry_os_version_user_telemetries_device_telemetries",
				Unique:  false,
				Columns: []*schema.Column{TelemetriesColumns[2], TelemetriesColumns[7], TelemetriesColumns[6]},
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserDevicesColumns holds the columns for the "user_devices" table.
	UserDevicesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeUUID},
		{Name: "device_id", Type: field.TypeInt},
	}
	// UserDevicesTable holds the schema information for the "user_devices" table.
	UserDevicesTable = &schema.Table{
		Name:       "user_devices",
		Columns:    UserDevicesColumns,
		PrimaryKey: []*schema.Column{UserDevicesColumns[0], UserDevicesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_devices_user_id",
				Columns:    []*schema.Column{UserDevicesColumns[0]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_devices_device_id",
				Columns:    []*schema.Column{UserDevicesColumns[1]},
				RefColumns: []*schema.Column{DevicesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		DevicesTable,
		TelemetriesTable,
		UsersTable,
		UserDevicesTable,
	}
)

func init() {
	TelemetriesTable.ForeignKeys[0].RefTable = DevicesTable
	TelemetriesTable.ForeignKeys[1].RefTable = UsersTable
	UserDevicesTable.ForeignKeys[0].RefTable = UsersTable
	UserDevicesTable.ForeignKeys[1].RefTable = DevicesTable
}
