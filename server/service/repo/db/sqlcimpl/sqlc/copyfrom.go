// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: copyfrom.go

package sqlc

import (
	"context"
)

// iteratorForInsertTelemetriesBulk implements pgx.CopyFromSource.
type iteratorForInsertTelemetriesBulk struct {
	rows                 []InsertTelemetriesBulkParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertTelemetriesBulk) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertTelemetriesBulk) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].UserID,
		r.rows[0].DeviceID,
		r.rows[0].OsVersion,
		r.rows[0].AppVersion,
		r.rows[0].Action,
		r.rows[0].Data,
		r.rows[0].Timestamp,
	}, nil
}

func (r iteratorForInsertTelemetriesBulk) Err() error {
	return nil
}

func (q *Queries) InsertTelemetriesBulk(ctx context.Context, arg []InsertTelemetriesBulkParams) (int64, error) {
	return q.db.CopyFrom(ctx, []string{"telemetries"}, []string{"user_id", "device_id", "os_version", "app_version", "action", "data", "timestamp"}, &iteratorForInsertTelemetriesBulk{rows: arg})
}
